{"ast":null,"code":"var _jsxFileName = \"/Users/James/Desktop/memegenerator/src/Components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import html2canvas from \"html2canvas\";\n\nimport * as htmlToImage from 'html-to-image';\nimport download from \"downloadjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  } // function copyImage() { html2canvas(document.querySelector(\".meme\"), {allowTaint: true}).then(function(canvas) {\n  //     // document.body.appendChild(canvas);\n  //     const dataURI = canvas.toDataURL();\n  //     console.log(dataURI);\n  // })\n  // };\n\n\n  function copyImage() {\n    htmlToImage.toPng(document.querySelector(\".meme\")).then(function (dataUrl) {\n      download(dataUrl, 'newMeme.png');\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  const loadFile = function (event) {\n    var url = URL.createObjectURL(event.target.files[0]);\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    })); // console.log(url)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"upload1\",\n        type: \"file\",\n        accept: \"image/*\",\n        name: \"image\",\n        id: \"file\",\n        onChange: loadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form--button\",\n        htmlFor: \"file\",\n        children: \"Upload Your Own Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imageMeme\",\n        id: \"output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button--export\",\n        onClick: copyImage,\n        children: \"Export Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"r5oA6kerv760pdQ4Sd/Xw4jXFD4=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/Users/James/Desktop/memegenerator/src/Components/Meme.js"],"names":["React","htmlToImage","download","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","copyImage","toPng","document","querySelector","dataUrl","handleChange","event","name","value","target","loadFile","URL","createObjectURL","files"],"mappings":"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","sourcesContent":["import React from \"react\"\n// import html2canvas from \"html2canvas\";\nimport * as htmlToImage from 'html-to-image';\nimport download from \"downloadjs\";\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then(data => setAllMemes(data.data.memes))\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n\n    // function copyImage() { html2canvas(document.querySelector(\".meme\"), {allowTaint: true}).then(function(canvas) {\n    //     // document.body.appendChild(canvas);\n    //     const dataURI = canvas.toDataURL();\n\n    //     console.log(dataURI);\n    // })\n    // };\n\n    function copyImage() {\n        htmlToImage.toPng(document.querySelector(\".meme\"))\n  .then(function (dataUrl) {\n    download(dataUrl, 'newMeme.png');\n  });\n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n\n    \n\n    const loadFile = function(event) {\n        var url = URL.createObjectURL(event.target.files[0]);\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n\n        // console.log(url)\n    };\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image 🖼\n                </button>\n\n                \n        \n                    <input className=\"upload1\" type=\"file\"  accept=\"image/*\" name=\"image\" id=\"file\"  onChange={loadFile} />\n                    <label className=\"form--button\" htmlFor=\"file\">Upload Your Own Image</label>\n                    <img className=\"imageMeme\" id=\"output\"/>\n\n                \n\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n            <div className=\"form\">\n                <button \n                    className=\"form--button--export\"\n                    onClick={copyImage}\n                >\n                    Export Meme\n                </button>\n            </div>\n            \n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}